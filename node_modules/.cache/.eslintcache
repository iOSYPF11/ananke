[{"/Users/pengfei.yang/Desktop/AWS ananke专案/src/index.js":"1","/Users/pengfei.yang/Desktop/AWS ananke专案/src/reportWebVitals.js":"2","/Users/pengfei.yang/Desktop/AWS ananke专案/src/App.js":"3","/Users/pengfei.yang/Desktop/AWS ananke专案/src/aws-exports.js":"4","/Users/pengfei.yang/Desktop/AWS ananke专案/src/graphql/queries.js":"5","/Users/pengfei.yang/Desktop/AWS ananke专案/src/graphql/mutations.js":"6"},{"size":641,"mtime":1629879365724,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1629857874576,"results":"9","hashOfConfig":"8"},{"size":4924,"mtime":1629883267815,"results":"10","hashOfConfig":"8"},{"size":1244,"mtime":1629882531639,"results":"11","hashOfConfig":"8"},{"size":716,"mtime":1629881537409,"results":"12","hashOfConfig":"8"},{"size":1087,"mtime":1629881537432,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1yi5w11",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/pengfei.yang/Desktop/AWS ananke专案/src/index.js",[],["28","29"],"/Users/pengfei.yang/Desktop/AWS ananke专案/src/reportWebVitals.js",[],"/Users/pengfei.yang/Desktop/AWS ananke专案/src/App.js",["30","31","32","33","34"],"import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { API, Storage } from 'aws-amplify';\nimport { withAuthenticator, AmplifySignOut } from '@aws-amplify/ui-react';\nimport { listNotes } from './graphql/queries';\nimport { createNote as createNoteMutation, deleteNote as deleteNoteMutation } from './graphql/mutations';\n\n\nconst initialFormState = {productChName:'',productNo:'',productEnName:'',productSize:'' }\nvar imageArrayName = []\nfunction App() {\n  const [notes, setNotes] = useState([]);\n  const [formData, setFormData] = useState(initialFormState);\n\n  useEffect(() => {\n    fetchNotes();\n  }, []);\n\n\n  //选择图片\n  async function onChange(e) {\n    imageArrayName = []\n    for(var i = 0;i<e.target.files.length;i++){\n      const file = e.target.files[i];\n      imageArrayName.push(file.name)\n      console.log(imageArrayName)\n    }\n    var jsonStr = JSON.stringify(imageArrayName)\n    setFormData({ ...formData, image: jsonStr});\n    for(var i = 0;i<e.target.files.length;i++){\n      await Storage.put(imageArrayName[i], e.target.files[i]);  \n    }\n    fetchNotes();\n  }\n  //检索数据库数据\n  async function fetchNotes() {\n    const apiData = await API.graphql({ query: listNotes });\n    const notesFromAPI = apiData.data.listNotes.items;\n    await Promise.all(notesFromAPI.map(async note => {\n      console.log(\"测试存储数据图片image     \" +note.image)\n      if (note.image) {\n        var myobj = eval(note.image);\n        const image = await Storage.get(myobj[0]);\n        //默认图片显示\n        note.image = \"https://anankebuket135650-dev.s3.ap-northeast-1.amazonaws.com/public/\"+myobj[0];\n      }\n      return note;\n    }))\n    setNotes(apiData.data.listNotes.items);\n  }\n  //上传数据啊啊\n  async function createNote() {\n\n    if(!formData.productChName || !formData.productEnName || !formData.productNo || !formData.productSize || !formData.image){\n\n      alert(\"请完善产品信息\");\n      return;\n\n    }\n    \n    await API.graphql({ query: createNoteMutation, variables: { input: formData } });\n\n    //查看上传数据结果\n\n    if (formData.image) {\n      const image = await Storage.get(formData.image);\n      formData.image = image;\n    }\n\n    // var imageArray = []\n    if (formData.image) {\n      // for(var i = 0;i<formData.image.length;i++){\n      //   const image = await Storage.get(formData.image[i]);\n      //   imageArray.push(image);   \n      //   console.log(\"图jieguo 前3333       \"+image)\n      // }\n\n      const image = await Storage.get(formData.image);\n      //默认图片显示\n      formData.image = \"https://anankebuket135650-dev.s3.ap-northeast-1.amazonaws.com/public/\"+imageArrayName[0];;\n    }\n\n    setNotes([ ...notes, formData ]);\n\n    \n    setFormData(initialFormState);\n  }\n  async function deleteNote({ id }) {\n    const newNotesArray = notes.filter(note => note.id !== id);\n    setNotes(newNotesArray);\n    await API.graphql({ query: deleteNoteMutation, variables: { input: { id } }});\n  }\n  return (\n    <div className=\"App\">\n      <h1>Ananke 潮牌产品上传</h1>\n      \n\n      <input style ={{height:40,marginLeft:10}}\n        onChange={e => setFormData({ ...formData, 'productChName': e.target.value})}\n        placeholder=\"ProductChName\"\n        value={formData.productChName}\n      />\n      <input style ={{height:40,marginLeft:10}}\n        onChange={e => setFormData({ ...formData, 'productEnName': e.target.value})}\n        placeholder=\"ProductEnName\"\n        value={formData.productEnName}\n      />\n\n      <input style ={{height:40,marginLeft:10}}\n        onChange={e => setFormData({ ...formData, 'productNo': e.target.value})}\n        placeholder=\"ProductNo\"\n        value={formData.productNo}\n      />\n      <input style ={{height:40,marginLeft:10}}\n        onChange={e => setFormData({ ...formData, 'productSize': e.target.value})}\n        placeholder=\"ProductSize\"\n        value={formData.productSize}\n      />\n\n      <div style={{marginBottom: 100}}>\n        <input style ={{height:40,marginLeft:20,marginTop:50}}\n          type=\"file\"\n          multiple=\"multiple\"\n          onChange={onChange}\n        />\n        <button style ={{height:40}} onClick={createNote}>Create Product</button>\n      </div >\n\n      <div style={{marginBottom: 100}}>\n        {\n          notes.map(note => (\n            <div key={note.id || note.productNo}>\n              \n              <div>\n                <h2>{note.productChName}</h2>\n              </div>\n\n              <p>{note.productNo}</p>\n              \n              {\n                note.image && <img src={note.image} style={{width: 400,backgroundColor:'blue'}} />\n              }\n              <div style={{height:50}}>\n                <button  onClick={() => deleteNote(note)}>Delete product</button>\n              </div>\n\n\n          </div>\n        ))\n      }\n      </div >\n\n      <AmplifySignOut/>\n    </div>\n  );\n}\n\nexport default withAuthenticator(App);\n\n","/Users/pengfei.yang/Desktop/AWS ananke专案/src/aws-exports.js",[],"/Users/pengfei.yang/Desktop/AWS ananke专案/src/graphql/queries.js",[],"/Users/pengfei.yang/Desktop/AWS ananke专案/src/graphql/mutations.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":30,"column":13,"nodeType":"41","messageId":"42","endLine":30,"endColumn":14},{"ruleId":"43","severity":1,"message":"44","line":42,"column":21,"nodeType":"45","messageId":"46","endLine":42,"endColumn":25},{"ruleId":"47","severity":1,"message":"48","line":43,"column":15,"nodeType":"41","messageId":"49","endLine":43,"endColumn":20},{"ruleId":"47","severity":1,"message":"48","line":78,"column":13,"nodeType":"41","messageId":"49","endLine":78,"endColumn":18},{"ruleId":"50","severity":1,"message":"51","line":141,"column":31,"nodeType":"52","endLine":141,"endColumn":99},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-redeclare","'i' is already defined.","Identifier","redeclared","no-eval","eval can be harmful.","CallExpression","unexpected","no-unused-vars","'image' is assigned a value but never used.","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]